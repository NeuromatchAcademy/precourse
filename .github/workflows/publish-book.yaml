name: publish-book

on: 

  workflow_dispatch:

env:
  NB_KERNEL: python
  NMA_REPO: precourse
  NMA_MAIN_BRANCH: main

# This job installs dependencies, build the book, and pushes it to `gh-pages`
jobs:
  build-and-deploy-book:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Get commit message
        run: |
          readonly local msg=$(git log -1 --pretty=format:"%s")
          echo "COMMIT_MESSAGE=$msg" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install CI tools
        run: |
          BRANCH=`python -c 'import os, re; m = re.search(r"nmaci:([\w-]+)", os.environ["COMMIT_MESSAGE"]); print("main" if m is None else m.group(1))'`
          wget https://github.com/NeuromatchAcademy/nmaci/archive/refs/heads/$BRANCH.tar.gz
          tar -xzf $BRANCH.tar.gz
          sudo apt-get update
          sudo apt-get install --fix-missing
          sudo apt-get install -y xvfb ffmpeg
          pip install --upgrade pip
          pip install -r nmaci-$BRANCH/requirements.txt
          mv nmaci-$BRANCH/scripts/ ci/
          rm -r nmaci-$BRANCH
          echo ci/ >> .gitignore

      - name: Install XKCD fonts
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        run: |
          sudo apt-get update -yq
          wget http://archive.ubuntu.com/ubuntu/pool/universe/f/fonts-humor-sans/fonts-humor-sans_1.0-4_all.deb
          sudo dpkg -i --force-all fonts-humor-sans_1.0-4_all.deb <<< 'yes'
          sudo apt install -fy
          rm -f $HOME/.matplotlib/fontList.cache

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install jupyter-book==0.10.2 ghp-import
          pip install jupyter_client==7.3.5  # downgrade jupyter-client to fix hangs

      - name: Build the book
        run: |
          python ci/generate_book_precourse.py student
          ln -s ../tutorials book/tutorials
          jupyter-book build book
          python ci/parse_html_for_errors.py student

      - name: Commit book
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          ghp-import -n -c "precourse.neuromatch.io" -m "Update course book" book/_build/html
          git checkout -f gh-pages

      - name: Publish to gh-pages
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          force: true
